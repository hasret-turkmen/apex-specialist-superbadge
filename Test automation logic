Build tests for all cases (positive, negative, and bulk) specified in the 
business requirements by using a class named MaintenanceRequestHelperTest.
You must have 100% test coverage to pass this section and assert values to prove that your logic 
is working as expected. Choose Run All Tests in the Developer Console at least once before attempting to 
submit this section. Be patient as it may take 10-20 seconds to process the challenge check.

WAREHOUSECALLOUTSERVICEMOCK.APXC
@istest
global class WarehouseCalloutServiceMock implements HttpCalloutMock{
    // implement http mock callout
    global HttpResponse respond(HttpRequest request){
        HttpResponse response = new HttpResponse();
        response.setHeader('Content-Type', 'application/json');
        response.setBody('[{"_id":"55d66226726b611100aaf741","replacement":true,"quantity":5,"name":"Generator 1000 kW","maintenanceperiod":365,"lifespan":120,"cost":5000,"sku":"220000"}]');
        response.setStatusCode(200);
        return response; 
    }
     
}



WAREHOUSECALLOUTSERVICETEST.APXC
@IsTest
private class WarehouseCalloutServiceTest {
    // implement your mock callout test here
    @isTest static void mainTest(){    
        Test.setMock(HttpCalloutMock.class, new WarehouseCalloutServiceMock());
        Test.startTest();
        Id jobID = System.enqueueJob(new WarehouseCalloutService());
        //System.assertEquals('Queued',aaj.status);
        Test.stopTest();
        AsyncApexJob aaj = [SELECT Id, Status, NumberOfErrors FROM AsyncApexJob WHERE Id = :jobID];
        System.assertEquals('Completed',aaj.status);
        System.assertEquals(0, aaj.NumberOfErrors);
    }
}
